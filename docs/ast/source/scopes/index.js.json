{
  "type": "Program",
  "body": [
    {
      "type": "ImportDeclaration",
      "specifiers": [
        {
          "type": "ImportDefaultSpecifier",
          "local": {
            "type": "Identifier",
            "name": "_value",
            "range": [
              7,
              13
            ],
            "loc": {
              "start": {
                "line": 1,
                "column": 7
              },
              "end": {
                "line": 1,
                "column": 13
              }
            }
          },
          "range": [
            7,
            13
          ],
          "loc": {
            "start": {
              "line": 1,
              "column": 7
            },
            "end": {
              "line": 1,
              "column": 13
            }
          }
        }
      ],
      "source": {
        "type": "Literal",
        "value": "./value",
        "raw": "'./value'",
        "range": [
          19,
          28
        ],
        "loc": {
          "start": {
            "line": 1,
            "column": 19
          },
          "end": {
            "line": 1,
            "column": 28
          }
        }
      },
      "range": [
        0,
        29
      ],
      "loc": {
        "start": {
          "line": 1,
          "column": 0
        },
        "end": {
          "line": 1,
          "column": 29
        }
      }
    },
    {
      "type": "ImportDeclaration",
      "specifiers": [
        {
          "type": "ImportDefaultSpecifier",
          "local": {
            "type": "Identifier",
            "name": "_fragment",
            "range": [
              37,
              46
            ],
            "loc": {
              "start": {
                "line": 2,
                "column": 7
              },
              "end": {
                "line": 2,
                "column": 16
              }
            }
          },
          "range": [
            37,
            46
          ],
          "loc": {
            "start": {
              "line": 2,
              "column": 7
            },
            "end": {
              "line": 2,
              "column": 16
            }
          }
        }
      ],
      "source": {
        "type": "Literal",
        "value": "./fragment",
        "raw": "'./fragment'",
        "range": [
          52,
          64
        ],
        "loc": {
          "start": {
            "line": 2,
            "column": 22
          },
          "end": {
            "line": 2,
            "column": 34
          }
        }
      },
      "range": [
        30,
        65
      ],
      "loc": {
        "start": {
          "line": 2,
          "column": 0
        },
        "end": {
          "line": 2,
          "column": 35
        }
      }
    },
    {
      "type": "ImportDeclaration",
      "specifiers": [
        {
          "type": "ImportDefaultSpecifier",
          "local": {
            "type": "Identifier",
            "name": "_combiner",
            "range": [
              73,
              82
            ],
            "loc": {
              "start": {
                "line": 3,
                "column": 7
              },
              "end": {
                "line": 3,
                "column": 16
              }
            }
          },
          "range": [
            73,
            82
          ],
          "loc": {
            "start": {
              "line": 3,
              "column": 7
            },
            "end": {
              "line": 3,
              "column": 16
            }
          }
        }
      ],
      "source": {
        "type": "Literal",
        "value": "./combiner",
        "raw": "'./combiner'",
        "range": [
          88,
          100
        ],
        "loc": {
          "start": {
            "line": 3,
            "column": 22
          },
          "end": {
            "line": 3,
            "column": 34
          }
        }
      },
      "range": [
        66,
        101
      ],
      "loc": {
        "start": {
          "line": 3,
          "column": 0
        },
        "end": {
          "line": 3,
          "column": 35
        }
      }
    },
    {
      "type": "ImportDeclaration",
      "specifiers": [
        {
          "type": "ImportDefaultSpecifier",
          "local": {
            "type": "Identifier",
            "name": "flyd",
            "range": [
              109,
              113
            ],
            "loc": {
              "start": {
                "line": 4,
                "column": 7
              },
              "end": {
                "line": 4,
                "column": 11
              }
            }
          },
          "range": [
            109,
            113
          ],
          "loc": {
            "start": {
              "line": 4,
              "column": 7
            },
            "end": {
              "line": 4,
              "column": 11
            }
          }
        }
      ],
      "source": {
        "type": "Literal",
        "value": "flyd",
        "raw": "'flyd'",
        "range": [
          119,
          125
        ],
        "loc": {
          "start": {
            "line": 4,
            "column": 17
          },
          "end": {
            "line": 4,
            "column": 23
          }
        }
      },
      "range": [
        102,
        126
      ],
      "loc": {
        "start": {
          "line": 4,
          "column": 0
        },
        "end": {
          "line": 4,
          "column": 24
        }
      }
    },
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "wrapFactory",
            "range": [
              134,
              145
            ],
            "loc": {
              "start": {
                "line": 6,
                "column": 6
              },
              "end": {
                "line": 6,
                "column": 17
              }
            }
          },
          "init": {
            "type": "ArrowFunctionExpression",
            "id": null,
            "params": [
              {
                "type": "Identifier",
                "name": "f",
                "range": [
                  148,
                  149
                ],
                "loc": {
                  "start": {
                    "line": 6,
                    "column": 20
                  },
                  "end": {
                    "line": 6,
                    "column": 21
                  }
                }
              }
            ],
            "body": {
              "type": "ArrowFunctionExpression",
              "id": null,
              "params": [
                {
                  "type": "Identifier",
                  "name": "opts",
                  "range": [
                    153,
                    157
                  ],
                  "loc": {
                    "start": {
                      "line": 6,
                      "column": 25
                    },
                    "end": {
                      "line": 6,
                      "column": 29
                    }
                  }
                }
              ],
              "body": {
                "type": "ArrowFunctionExpression",
                "id": null,
                "params": [
                  {
                    "type": "Identifier",
                    "name": "input",
                    "range": [
                      161,
                      166
                    ],
                    "loc": {
                      "start": {
                        "line": 6,
                        "column": 33
                      },
                      "end": {
                        "line": 6,
                        "column": 38
                      }
                    }
                  }
                ],
                "body": {
                  "type": "CallExpression",
                  "callee": {
                    "type": "Identifier",
                    "name": "f",
                    "range": [
                      170,
                      171
                    ],
                    "loc": {
                      "start": {
                        "line": 6,
                        "column": 42
                      },
                      "end": {
                        "line": 6,
                        "column": 43
                      }
                    }
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "opts",
                      "range": [
                        172,
                        176
                      ],
                      "loc": {
                        "start": {
                          "line": 6,
                          "column": 44
                        },
                        "end": {
                          "line": 6,
                          "column": 48
                        }
                      }
                    },
                    {
                      "type": "Identifier",
                      "name": "input",
                      "range": [
                        178,
                        183
                      ],
                      "loc": {
                        "start": {
                          "line": 6,
                          "column": 50
                        },
                        "end": {
                          "line": 6,
                          "column": 55
                        }
                      }
                    }
                  ],
                  "range": [
                    170,
                    184
                  ],
                  "loc": {
                    "start": {
                      "line": 6,
                      "column": 42
                    },
                    "end": {
                      "line": 6,
                      "column": 56
                    }
                  }
                },
                "generator": false,
                "expression": true,
                "range": [
                  161,
                  184
                ],
                "loc": {
                  "start": {
                    "line": 6,
                    "column": 33
                  },
                  "end": {
                    "line": 6,
                    "column": 56
                  }
                }
              },
              "generator": false,
              "expression": true,
              "range": [
                153,
                184
              ],
              "loc": {
                "start": {
                  "line": 6,
                  "column": 25
                },
                "end": {
                  "line": 6,
                  "column": 56
                }
              }
            },
            "generator": false,
            "expression": true,
            "range": [
              148,
              184
            ],
            "loc": {
              "start": {
                "line": 6,
                "column": 20
              },
              "end": {
                "line": 6,
                "column": 56
              }
            }
          },
          "range": [
            134,
            184
          ],
          "loc": {
            "start": {
              "line": 6,
              "column": 6
            },
            "end": {
              "line": 6,
              "column": 56
            }
          }
        }
      ],
      "kind": "const",
      "range": [
        128,
        185
      ],
      "loc": {
        "start": {
          "line": 6,
          "column": 0
        },
        "end": {
          "line": 6,
          "column": 57
        }
      }
    },
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "value",
            "range": [
              193,
              198
            ],
            "loc": {
              "start": {
                "line": 8,
                "column": 6
              },
              "end": {
                "line": 8,
                "column": 11
              }
            }
          },
          "init": {
            "type": "CallExpression",
            "callee": {
              "type": "Identifier",
              "name": "wrapFactory",
              "range": [
                201,
                212
              ],
              "loc": {
                "start": {
                  "line": 8,
                  "column": 14
                },
                "end": {
                  "line": 8,
                  "column": 25
                }
              }
            },
            "arguments": [
              {
                "type": "Identifier",
                "name": "_value",
                "range": [
                  213,
                  219
                ],
                "loc": {
                  "start": {
                    "line": 8,
                    "column": 26
                  },
                  "end": {
                    "line": 8,
                    "column": 32
                  }
                }
              }
            ],
            "range": [
              201,
              220
            ],
            "loc": {
              "start": {
                "line": 8,
                "column": 14
              },
              "end": {
                "line": 8,
                "column": 33
              }
            }
          },
          "range": [
            193,
            220
          ],
          "loc": {
            "start": {
              "line": 8,
              "column": 6
            },
            "end": {
              "line": 8,
              "column": 33
            }
          }
        }
      ],
      "kind": "const",
      "range": [
        187,
        221
      ],
      "loc": {
        "start": {
          "line": 8,
          "column": 0
        },
        "end": {
          "line": 8,
          "column": 34
        }
      }
    },
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "fragment",
            "range": [
              228,
              236
            ],
            "loc": {
              "start": {
                "line": 9,
                "column": 6
              },
              "end": {
                "line": 9,
                "column": 14
              }
            }
          },
          "init": {
            "type": "CallExpression",
            "callee": {
              "type": "Identifier",
              "name": "wrapFactory",
              "range": [
                239,
                250
              ],
              "loc": {
                "start": {
                  "line": 9,
                  "column": 17
                },
                "end": {
                  "line": 9,
                  "column": 28
                }
              }
            },
            "arguments": [
              {
                "type": "Identifier",
                "name": "_fragment",
                "range": [
                  251,
                  260
                ],
                "loc": {
                  "start": {
                    "line": 9,
                    "column": 29
                  },
                  "end": {
                    "line": 9,
                    "column": 38
                  }
                }
              }
            ],
            "range": [
              239,
              261
            ],
            "loc": {
              "start": {
                "line": 9,
                "column": 17
              },
              "end": {
                "line": 9,
                "column": 39
              }
            }
          },
          "range": [
            228,
            261
          ],
          "loc": {
            "start": {
              "line": 9,
              "column": 6
            },
            "end": {
              "line": 9,
              "column": 39
            }
          }
        }
      ],
      "kind": "const",
      "range": [
        222,
        262
      ],
      "loc": {
        "start": {
          "line": 9,
          "column": 0
        },
        "end": {
          "line": 9,
          "column": 40
        }
      }
    },
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "combiner",
            "range": [
              269,
              277
            ],
            "loc": {
              "start": {
                "line": 10,
                "column": 6
              },
              "end": {
                "line": 10,
                "column": 14
              }
            }
          },
          "init": {
            "type": "CallExpression",
            "callee": {
              "type": "Identifier",
              "name": "wrapFactory",
              "range": [
                280,
                291
              ],
              "loc": {
                "start": {
                  "line": 10,
                  "column": 17
                },
                "end": {
                  "line": 10,
                  "column": 28
                }
              }
            },
            "arguments": [
              {
                "type": "Identifier",
                "name": "_combiner",
                "range": [
                  292,
                  301
                ],
                "loc": {
                  "start": {
                    "line": 10,
                    "column": 29
                  },
                  "end": {
                    "line": 10,
                    "column": 38
                  }
                }
              }
            ],
            "range": [
              280,
              302
            ],
            "loc": {
              "start": {
                "line": 10,
                "column": 17
              },
              "end": {
                "line": 10,
                "column": 39
              }
            }
          },
          "range": [
            269,
            302
          ],
          "loc": {
            "start": {
              "line": 10,
              "column": 6
            },
            "end": {
              "line": 10,
              "column": 39
            }
          }
        }
      ],
      "kind": "const",
      "range": [
        263,
        303
      ],
      "loc": {
        "start": {
          "line": 10,
          "column": 0
        },
        "end": {
          "line": 10,
          "column": 40
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "MemberExpression",
          "computed": false,
          "object": {
            "type": "Identifier",
            "name": "window",
            "range": [
              305,
              311
            ],
            "loc": {
              "start": {
                "line": 12,
                "column": 0
              },
              "end": {
                "line": 12,
                "column": 6
              }
            }
          },
          "property": {
            "type": "Identifier",
            "name": "flyd",
            "range": [
              312,
              316
            ],
            "loc": {
              "start": {
                "line": 12,
                "column": 7
              },
              "end": {
                "line": 12,
                "column": 11
              }
            }
          },
          "range": [
            305,
            316
          ],
          "loc": {
            "start": {
              "line": 12,
              "column": 0
            },
            "end": {
              "line": 12,
              "column": 11
            }
          }
        },
        "right": {
          "type": "Identifier",
          "name": "flyd",
          "range": [
            320,
            324
          ],
          "loc": {
            "start": {
              "line": 12,
              "column": 15
            },
            "end": {
              "line": 12,
              "column": 19
            }
          }
        },
        "range": [
          305,
          324
        ],
        "loc": {
          "start": {
            "line": 12,
            "column": 0
          },
          "end": {
            "line": 12,
            "column": 19
          }
        }
      },
      "range": [
        305,
        325
      ],
      "loc": {
        "start": {
          "line": 12,
          "column": 0
        },
        "end": {
          "line": 12,
          "column": 20
        }
      },
      "trailingComments": [
        {
          "type": "Block",
          "value": "*\n * scope stream\n * - stream representation of json data that (may) change\n * - depends on input stream\n * - inputs are PatchActions\n * - outputs are Contexts\n * - flyd stream\n * @see https://github.com/paldepind/flyd#flydstream\n * @typedef {function(patchAction: List<Patch>) } Scope\n ",
          "range": [
            328,
            619
          ],
          "loc": {
            "start": {
              "line": 15,
              "column": 0
            },
            "end": {
              "line": 24,
              "column": 3
            }
          }
        },
        {
          "type": "Block",
          "value": "*\n * scope factory\n * - creates scope, who listen on input\n * - curried: opts -> inputStream -> scope\n * @typedef {function(options: Object, input: Scope): Scope} ScopeFactory\n ",
          "range": [
            621,
            802
          ],
          "loc": {
            "start": {
              "line": 26,
              "column": 0
            },
            "end": {
              "line": 31,
              "column": 3
            }
          }
        },
        {
          "type": "Block",
          "value": "*\n  * scope factory with bound options\n  * @typedef {function(input: Scope): Scope} ScopeFactory'\n  ",
          "range": [
            805,
            909
          ],
          "loc": {
            "start": {
              "line": 33,
              "column": 1
            },
            "end": {
              "line": 36,
              "column": 4
            }
          }
        }
      ]
    },
    {
      "type": "ExportDefaultDeclaration",
      "declaration": {
        "type": "ObjectExpression",
        "properties": [
          {
            "type": "Property",
            "key": {
              "type": "Identifier",
              "name": "value",
              "range": [
                930,
                935
              ],
              "loc": {
                "start": {
                  "line": 39,
                  "column": 2
                },
                "end": {
                  "line": 39,
                  "column": 7
                }
              }
            },
            "value": {
              "type": "Identifier",
              "name": "value",
              "range": [
                930,
                935
              ],
              "loc": {
                "start": {
                  "line": 39,
                  "column": 2
                },
                "end": {
                  "line": 39,
                  "column": 7
                }
              }
            },
            "kind": "init",
            "method": false,
            "shorthand": true,
            "computed": false,
            "range": [
              930,
              935
            ],
            "loc": {
              "start": {
                "line": 39,
                "column": 2
              },
              "end": {
                "line": 39,
                "column": 7
              }
            }
          },
          {
            "type": "Property",
            "key": {
              "type": "Identifier",
              "name": "fragment",
              "range": [
                939,
                947
              ],
              "loc": {
                "start": {
                  "line": 40,
                  "column": 2
                },
                "end": {
                  "line": 40,
                  "column": 10
                }
              }
            },
            "value": {
              "type": "Identifier",
              "name": "fragment",
              "range": [
                939,
                947
              ],
              "loc": {
                "start": {
                  "line": 40,
                  "column": 2
                },
                "end": {
                  "line": 40,
                  "column": 10
                }
              }
            },
            "kind": "init",
            "method": false,
            "shorthand": true,
            "computed": false,
            "range": [
              939,
              947
            ],
            "loc": {
              "start": {
                "line": 40,
                "column": 2
              },
              "end": {
                "line": 40,
                "column": 10
              }
            }
          },
          {
            "type": "Property",
            "key": {
              "type": "Identifier",
              "name": "combiner",
              "range": [
                951,
                959
              ],
              "loc": {
                "start": {
                  "line": 41,
                  "column": 2
                },
                "end": {
                  "line": 41,
                  "column": 10
                }
              }
            },
            "value": {
              "type": "Identifier",
              "name": "combiner",
              "range": [
                951,
                959
              ],
              "loc": {
                "start": {
                  "line": 41,
                  "column": 2
                },
                "end": {
                  "line": 41,
                  "column": 10
                }
              }
            },
            "kind": "init",
            "method": false,
            "shorthand": true,
            "computed": false,
            "range": [
              951,
              959
            ],
            "loc": {
              "start": {
                "line": 41,
                "column": 2
              },
              "end": {
                "line": 41,
                "column": 10
              }
            }
          }
        ],
        "range": [
          926,
          961
        ],
        "loc": {
          "start": {
            "line": 38,
            "column": 15
          },
          "end": {
            "line": 42,
            "column": 1
          }
        },
        "leadingComments": [
          {
            "type": "Block",
            "value": "*\n * scope stream\n * - stream representation of json data that (may) change\n * - depends on input stream\n * - inputs are PatchActions\n * - outputs are Contexts\n * - flyd stream\n * @see https://github.com/paldepind/flyd#flydstream\n * @typedef {function(patchAction: List<Patch>) } Scope\n ",
            "range": [
              328,
              619
            ],
            "loc": {
              "start": {
                "line": 15,
                "column": 0
              },
              "end": {
                "line": 24,
                "column": 3
              }
            }
          },
          {
            "type": "Block",
            "value": "*\n * scope factory\n * - creates scope, who listen on input\n * - curried: opts -> inputStream -> scope\n * @typedef {function(options: Object, input: Scope): Scope} ScopeFactory\n ",
            "range": [
              621,
              802
            ],
            "loc": {
              "start": {
                "line": 26,
                "column": 0
              },
              "end": {
                "line": 31,
                "column": 3
              }
            }
          },
          {
            "type": "Block",
            "value": "*\n  * scope factory with bound options\n  * @typedef {function(input: Scope): Scope} ScopeFactory'\n  ",
            "range": [
              805,
              909
            ],
            "loc": {
              "start": {
                "line": 33,
                "column": 1
              },
              "end": {
                "line": 36,
                "column": 4
              }
            }
          }
        ],
        "trailingComments": []
      },
      "range": [
        911,
        962
      ],
      "loc": {
        "start": {
          "line": 38,
          "column": 0
        },
        "end": {
          "line": 42,
          "column": 2
        }
      },
      "leadingComments": [
        {
          "type": "Block",
          "value": "*\n * scope stream\n * - stream representation of json data that (may) change\n * - depends on input stream\n * - inputs are PatchActions\n * - outputs are Contexts\n * - flyd stream\n * @see https://github.com/paldepind/flyd#flydstream\n * @typedef {function(patchAction: List<Patch>) } Scope\n ",
          "range": [
            328,
            619
          ],
          "loc": {
            "start": {
              "line": 15,
              "column": 0
            },
            "end": {
              "line": 24,
              "column": 3
            }
          }
        },
        {
          "type": "Block",
          "value": "*\n * scope factory\n * - creates scope, who listen on input\n * - curried: opts -> inputStream -> scope\n * @typedef {function(options: Object, input: Scope): Scope} ScopeFactory\n ",
          "range": [
            621,
            802
          ],
          "loc": {
            "start": {
              "line": 26,
              "column": 0
            },
            "end": {
              "line": 31,
              "column": 3
            }
          }
        },
        {
          "type": "Block",
          "value": "*\n  * scope factory with bound options\n  * @typedef {function(input: Scope): Scope} ScopeFactory'\n  ",
          "range": [
            805,
            909
          ],
          "loc": {
            "start": {
              "line": 33,
              "column": 1
            },
            "end": {
              "line": 36,
              "column": 4
            }
          }
        }
      ]
    }
  ],
  "sourceType": "module",
  "range": [
    0,
    962
  ],
  "loc": {
    "start": {
      "line": 1,
      "column": 0
    },
    "end": {
      "line": 42,
      "column": 2
    }
  },
  "comments": [
    {
      "type": "Block",
      "value": "*\n * scope stream\n * - stream representation of json data that (may) change\n * - depends on input stream\n * - inputs are PatchActions\n * - outputs are Contexts\n * - flyd stream\n * @see https://github.com/paldepind/flyd#flydstream\n * @typedef {function(patchAction: List<Patch>) } Scope\n ",
      "range": [
        328,
        619
      ],
      "loc": {
        "start": {
          "line": 15,
          "column": 0
        },
        "end": {
          "line": 24,
          "column": 3
        }
      }
    },
    {
      "type": "Block",
      "value": "*\n * scope factory\n * - creates scope, who listen on input\n * - curried: opts -> inputStream -> scope\n * @typedef {function(options: Object, input: Scope): Scope} ScopeFactory\n ",
      "range": [
        621,
        802
      ],
      "loc": {
        "start": {
          "line": 26,
          "column": 0
        },
        "end": {
          "line": 31,
          "column": 3
        }
      }
    },
    {
      "type": "Block",
      "value": "*\n  * scope factory with bound options\n  * @typedef {function(input: Scope): Scope} ScopeFactory'\n  ",
      "range": [
        805,
        909
      ],
      "loc": {
        "start": {
          "line": 33,
          "column": 1
        },
        "end": {
          "line": 36,
          "column": 4
        }
      }
    }
  ]
}